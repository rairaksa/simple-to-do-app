{"version":3,"sources":["Header.js","ToDoList.js","ToDoForm.js","Footer.js","App.js","index.js"],"names":["Header","className","ToDoList","props","todos","setTodos","remaining","setRemaining","filter","setFilter","handleFilter","name","useEffect","counter","todo","isComplete","length","all","active","complete","map","type","class","checked","onChange","id","newTodos","state","handleChange","title","onClick","handleDelete","fill","stroke","viewBox","xmlns","stroke-linecap","stroke-linejoin","stroke-width","d","href","handleClearComplete","ToDoForm","useState","inputText","setInputText","insert","placeholder","value","onKeyUp","event","keyCode","newInputText","target","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de976ecb.chunk.js","sourcesContent":["function Header() {\r\n    return (\r\n        <h1 className=\"uppercase text-4xl font-bold text-gray-100 tracking-wider\">To Do App</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useEffect } from \"react\";\r\n\r\nfunction ToDoList(props) {    \r\n\r\n    const todos = props.todos;\r\n    const setTodos = props.setTodos;\r\n\r\n    const remaining = props.remaining;\r\n    const setRemaining = props.setRemaining;\r\n\r\n    const filter = props.filter;\r\n    const setFilter = props.setFilter;\r\n\r\n    // handle delete\r\n\r\n    const handleDelete = (id) => {\r\n        const newTodos = todos.filter(todo => todo.id !== id);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    // handle change\r\n\r\n    const handleChange = (id) => {\r\n        const newTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                let state = false;\r\n                if(!todo.isComplete) {\r\n                    state = true;\r\n                }\r\n                return {\r\n                    ... todo,\r\n                    isComplete: state\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ... todo\r\n                }\r\n            }\r\n        });\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    // handle filter\r\n\r\n    const filterMap = {\r\n        all: () => true,\r\n        active: todo => !todo.isComplete,\r\n        complete: todo => todo.isComplete\r\n    }\r\n\r\n    const handleFilter = (name) => {\r\n        const newFilter = name;\r\n        setFilter(newFilter);\r\n        setTodos(todos);\r\n    }\r\n\r\n    // handle clear complete\r\n\r\n    const handleClearComplete = () => {\r\n        const newTodos = todos.filter(todo => todo.isComplete !== true);\r\n        setTodos(newTodos);\r\n    }\r\n    \r\n    // handle counter\r\n\r\n    useEffect(() => {\r\n        const remainingTodos = todos.filter(todo => todo.isComplete !== true);\r\n        let counter = remainingTodos.length;\r\n        setRemaining(counter);\r\n    });\r\n\r\n    return (\r\n        <div className=\"w-full h-auto py-6 px-6 bg-gray-100 rounded-md shadow-md\">\r\n            <ul className=\"flex flex-col divide-y border-gray-600\">\r\n                {                    \r\n                    todos.filter(filterMap[filter]).map((todo) => (\r\n                        <li className=\"flex flex-row py-2 m-0 gap-4 items-center\" key={todo.id}>\r\n                            <input type=\"checkbox\" class=\"flex-shrink focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\" checked={todo.isComplete ? 'checked' : null} onChange={() => handleChange(todo.id)}>\r\n                            </input>\r\n                            <p className={\"flex-grow p-0 text-gray-800 \"+ (todo.isComplete ? 'line-through' : null ) }>{todo.title}</p>\r\n                            <button className=\"bg-red-600 hover:bg-red-800 p-2 rounded-md text-white transition\" onClick={() => handleDelete(todo.id)}>\r\n                                <span>\r\n                                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\">\r\n                                        </path>\r\n                                    </svg>\r\n                                </span>\r\n                            </button>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            <div className=\"flex flex-col gap-2 lg:gap-0 lg:flex-row justify-between items-center mt-8\">\r\n                <p className=\"flex-shrink order-3 lg:order-1 text-gray-600 text-sm font-light tracking-wider\">{ remaining } Items Left</p>\r\n                <div className=\"flex-grow flex flex-row order-1 lg:order-2 justify-center items-center gap-2 text-sm text-gray-600 text-basee font-light tracking-wider\">\r\n                    <button className={\"rounded-md \" + (filter === 'all' ? 'bg-blue-600 text-gray-100' : \"bg-transparent text-gray-600\" ) + \" hover:bg-blue-800 hover:text-gray-100 py-1 px-2 transition\"} onClick={() => handleFilter('all')}>All</button>\r\n                    <button className={\"rounded-md \" + (filter === 'active' ? 'bg-blue-600 text-gray-100' : \"bg-transparent text-gray-600\" ) + \" hover:bg-blue-800 hover:text-gray-100 py-1 px-2 transition\"} onClick={() => handleFilter('active')}>Active</button>\r\n                    <button className={\"rounded-md \" + (filter === 'complete' ? 'bg-blue-600 text-gray-100' : \"bg-transparent text-gray-600\" ) + \" hover:bg-blue-800 hover:text-gray-100 py-1 px-2 transition\"} onClick={() => handleFilter('complete')}>Complete</button>\r\n                </div>\r\n                <a className=\"order-2 lg:order-3 text-sm text-gray-600 font-light tracking-wider rounded-md py-1 px-2 hover:bg-red-800 hover:text-white transition\" href=\"#\" onClick={() => handleClearComplete() }>Clear Completed</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import { useState } from \"react\";\r\nimport ToDoList from \"./ToDoList\";\r\n\r\nfunction ToDoForm() {\r\n\r\n    // input handler\r\n\r\n    const [inputText, setInputText] = useState('');\r\n    \r\n    const handleInsert = () => {\r\n        insert();\r\n    }\r\n\r\n    const handleKeyUp = (event) => {\r\n        if(event.keyCode === 13) {\r\n            insert();\r\n        }\r\n    }\r\n\r\n    const insert = () => {\r\n        // get highest id\r\n        let id = 0;\r\n\r\n        todos.map((todo) => {\r\n            if(todo.id >= id) {\r\n                id = todo.id + 1;\r\n            }\r\n        })\r\n\r\n        setTodos([ ... todos, {\r\n            id:id,\r\n            isComplete:false,\r\n            title:inputText\r\n        }]);\r\n    }\r\n\r\n    // lists\r\n\r\n    const [todos, setTodos] = useState([\r\n        {\r\n            id:1,\r\n            isComplete:true,\r\n            title:'Boil water in saucepan'\r\n        },\r\n        {\r\n            id:2,\r\n            isComplete:false,\r\n            title:'Put the egg in saucepan'\r\n        },\r\n        {\r\n            id:3,\r\n            isComplete:false,\r\n            title:'Submerge the egg in water'\r\n        },\r\n        {\r\n            id:4,\r\n            isComplete:false,\r\n            title:'Peel and enjoy it!'\r\n        }\r\n    ]);\r\n\r\n    // change handler\r\n    const handleChange = (event) => {\r\n        const newInputText = event.target.value;\r\n        setInputText(newInputText);\r\n    }\r\n\r\n    // remaining\r\n\r\n    const [remaining, setRemaining] = useState(3);\r\n\r\n    // filter\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-4\">\r\n            <div className=\"w-full h-auto py-6 px-6 bg-gray-100 rounded-md shadow-md flex flex-row\">\r\n                <input type=\"text\" className=\"flex-grow w-auto h-auto p-2 text-base rounded-l-md outline-none focus:ring focus:border-blue-300 transition\" placeholder=\"Input task\" value={inputText} onKeyUp={handleKeyUp} onChange={handleChange}/>\r\n                <button className=\"flex-shrink w-auto h-auto py-2 px-4 lg:px-8 text-base rounded-r-md bg-blue-600 text-gray-100 hover:bg-blue-800 hover:text-gray-100 transition\" onClick={() => handleInsert()}>Add</button>\r\n            </div>\r\n            <ToDoList todos={todos} setTodos={setTodos} remaining={remaining} setRemaining={setRemaining} filter={filter} setFilter={setFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","function Footer() {\r\n  return (\r\n      <h6 className=\"font-thin text-gray-400 text-sm tracking-wider\">To Do App By Rai Raksa</h6>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Header from './Header.js' \nimport ToDoForm from './ToDoForm.js'\nimport Footer from './Footer.js'\n\nfunction App() {\n  return (\n    <div className=\"App bg-gray-800 relative w-full min-h-screen pt-20\">\n      <div className=\"absolute left-0 top-0 w-full h-72 bg-gradient-to-br from-blue-400 to-blue-600 via-blue-500 z-0\">\n      </div>\n      <div className=\"absolute top-0 w-full h-auto pt-16 px-4 py-4 lg:px-0\">\n        <div className=\"w-full lg:w-1/3 mx-auto flex flex-col gap-4\">\n          <Header />\n          <ToDoForm />\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}